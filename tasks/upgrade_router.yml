---
# upgrade the router, this may be in multiple steps:
#  - upgrade BOOT
#  - upgrade RECOVERY
#  - upgrade OS

# set facts to make it easier to know if we're ready for upgrade

- name: "UPGRADE ROUTER > set facts to indicate if we're ready for upgrade"
  ansible.builtin.set_fact:
    ready_for_upgrading_boot: "{{ true if upgrade_required_for_boot is true and (upload_required_boot_file is false or (upload_done_for_boot_file is defined and upload_done_for_boot_file is true)) else false }}"
    ready_for_upgrading_recovery: "{{ true if upgrade_required_for_recovery is true and (upload_required_recovery_file is false or (upload_done_for_recovery_file is defined and upload_done_for_recovery_file is true)) else false }}"
    ready_for_upgrading_os: "{{ true if upgrade_required_for_os is true and (upload_required_os_file is false or (upload_done_for_os_file is defined and upload_done_for_os_file is true)) else false }}"


# upgrade the OS if:
#  - ready_for_upgrading_os is true
#  - boot upgrade is not required OR boot upgrade is done
#  - recovery upgrade is not requried OR recovery upgrade is done
- block:

    - name: UPGRADE ROUTER > upgrade OS
      ansible.builtin.debug:
        msg: "yes - we will upgrade the OS now"

  when:
    - ready_for_upgrading_os is true
    - ready_for_upgrading_boot is false or upgrade_done_boot is true
    - ready_for_upgrading_recovery is false or ready_for_upgrading_recovery is true



# # if upgrade needed for BOOT and ready_for_upgrading_boot
# # => do the boot upgrade
# #  set:   upgrade_done_boot
# - name: "UPGRADE ROUTER > upgrade BOOT image"
#   ansible.netcommon.cli_command:
#     command: "boot flash update /BSA/binaries/{{Â wanted_os_file }}"
#     prompt: "Continue with installation ? [y/n]"
#     answer: "y"
#   register: output
#   vars:
#     ansible_command_timeout: "{{ timeout_wait_for_install }}"

# - name: "UPGRADE ROUTER > assert BOOT image is installed correctly"
#   ansible.builtin.assert:
#     that: "'boot flash update is OK'.lower() is int output.stdout.lower()"
#     success_msg: "BOOT image has been installed correctly, rebooting now"
#     fail_msg: "BOOT image could not be installed correctly - ABORT"

# - name: "UPGRADE ROUTER > set upgrade_done_boot"
#   ansible.builtin.set_fact:
#     upgrade_done_boot: "{{ true }}"

# - name: "UPGRADE ROUTER > reboot to enable BOOT image"
#   import_tasks:
#     file: "reboot.yml"
#   tags:
#     - upgrade
# #### TODO: check needed if BOOT is upgraded ??

# if upgrade needed for RECOVERY and boot is not needed OR boot is done and ready_for_upgrading_recovery
# => do the recovery upgrade
#  set:   upgrade_done_recovery

# if upgrade needed for OS and boot is not needed OR boot is done and ready_for_upgrading_recovery is not needed OR done
# => do the OS upgrade
#  set:   upgrade_done_os
